{
  "name": "s3-deleter",
  "version": "0.1.2",
  "description": "A writable stream that deletes files from S3 via knox",
  "main": "lib/index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/drob/s3-deleter.git"
  },
  "author": {
    "name": "Dan Robinson",
    "email": "dan@drob.us"
  },
  "license": "MIT",
  "dependencies": {
    "async": ">=0.2 < 1"
  },
  "peerDependencies": {
    "knox": ">=0.5 < 1"
  },
  "devDependencies": {
    "knox": "^0.8.9",
    "mocha": "^1.17.1",
    "s3-lister": "^0.1.0"
  },
  "scripts": {
    "prepublish": "coffee -o lib -c src/index.coffee",
    "test": "mocha test/test.coffee"
  },
  "bugs": {
    "url": "https://github.com/drob/s3-deleter/issues"
  },
  "homepage": "https://github.com/drob/s3-deleter",
  "directories": {
    "test": "test"
  },
  "keywords": [
    "s3",
    "delete",
    "stream"
  ],
  "readme": "S3-Deleter\n=========\n\nA writable stream that batch-deletes files from s3, via the excellent [knox]. Designed for use with [s3-lister].\n\n[knox]: https://npmjs.org/package/knox\n[s3-lister]: https://npmjs.org/package/s3-lister\n\n## Examples\n\nThese code snippets show some of the things you can do with two streams and a knox client.\n\nDeleting all the files in a folder:\n```javascript\nvar client = knox.createClient({\n  key    : '<api-key-here>',\n  secret : '<secret-here>',\n  bucket : 'great-bucket'\n});\n\nvar lister = new S3Lister(client, {prefix : 'folder/i/dislike'});\nvar deleter = new S3Deleter(client);\n\ndeleter\n  .on('error',  function (err) { console.log('Error!!', err); })\n  .on('finish', function ()    { console.log 'All done!' });\nlister.pipe(deleter);\n```\n\nDeleting all the files in a bucket that are more than one week old:\n```javascript\nvar client = knox.createClient({\n  key    : '<api-key-here>',\n  secret : '<secret-here>',\n  bucket : 'great-bucket'\n});\n\nvar lister = new S3Lister(client);\nvar deleter = new S3Deleter(client);\n\ndeleter\n  .on('error',  function (err) { console.log('Error!!', err); })\n  .on('finish', function ()    { console.log 'All done!' });\n\nvar oneWeekAgo = Date.now() - 1000 * 60 * 60 * 24 * 7;\nlister\n  .on('error', function (err)  { console.log('Error!!', err); })\n  .on('end',   function ()     { deleter.end(); })\n  .on('data',  function (file) {\n    if (parseInt(file.LastModified) < oneWeekAgo) {\n      deleter.write(file);\n    }\n  });\n```\n\n## Usage\n\n#### new S3Deleter(client, options)\n\n* client - a knox client\n* options - hash of options\n\nIn addition to the standard writable stream settings, `S3Deleter` supports:\n* batchSize - size of batches to delete at a time, up to 1000\n\n## Running Tests\n\nTo run the test suite, create a file named `./test/auth.json`, containing your S3 bucket credentials as a JSON, a la:\n\n```json\n{\n  \"bucket\": \"my-bucket\",\n  \"region\": \"us-standard\",\n  \"key\": \"<api-key>\",\n  \"secret\": \"<secret-key>\"\n}\n```\n",
  "readmeFilename": "README.md",
  "_id": "s3-deleter@0.1.2",
  "_from": "s3-deleter@0.x"
}
